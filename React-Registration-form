//Ass-8-->Build a user registration form in React using controlled components. Implement basic validation for required fields and email format.
import React, { useState } from "react";

function RegistrationForm() {
  // Step 1: State to store form values
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    password: "",
  });

  // Step 2: State to store errors
  const [errors, setErrors] = useState({});

  // Step 3: Handle input changes
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };

  // Step 4: Validate form
  const validate = () => {
    let tempErrors = {};

    // Name validation
    if (!formData.name) {
      tempErrors.name = "Name is required";
    }

    // Email validation
    if (!formData.email) {
      tempErrors.email = "Email is required";
    } else {
      // Simple email regex
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(formData.email)) {
        tempErrors.email = "Email is not valid";
      }
    }

    // Password validation
    if (!formData.password) {
      tempErrors.password = "Password is required";
    }

    setErrors(tempErrors);

    // Return true if no errors
    return Object.keys(tempErrors).length === 0;
  };

  // Step 5: Handle form submit
  const handleSubmit = (e) => {
    e.preventDefault();
    if (validate()) {
      console.log("Form submitted successfully!", formData);
      alert("Registration Successful!");
      // Clear form
      setFormData({ name: "", email: "", password: "" });
      setErrors({});
    }
  };

  return (
    <div style={{ maxWidth: "400px", margin: "auto" }}>
      <h2>User Registration</h2>
      <form onSubmit={handleSubmit}>
        {/* Name Field */}
        <div>
          <label>Name:</label>
          <input
            type="text"
            name="name"
            value={formData.name}
            onChange={handleChange}
          />
          {errors.name && <p style={{ color: "red" }}>{errors.name}</p>}
        </div>

        {/* Email Field */}
        <div>
          <label>Email:</label>
          <input
            type="text"
            name="email"
            value={formData.email}
            onChange={handleChange}
          />
          {errors.email && <p style={{ color: "red" }}>{errors.email}</p>}
        </div>

        {/* Password Field */}
        <div>
          <label>Password:</label>
          <input
            type="password"
            name="password"
            value={formData.password}
            onChange={handleChange}
          />
          {errors.password && <p style={{ color: "red" }}>{errors.password}</p>}
        </div>

        <button type="submit">Register</button>
      </form>
    </div>
  );
}

export default RegistrationForm;
